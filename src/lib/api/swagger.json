{
  "openapi": "3.0.1",
  "info": {
    "title": "Elite API",
    "description": "A backend API for https://elitebot.dev/ that provides Hypixel Skyblock data. Use of this API requires following the TOS. This API is not affiliated with Hypixel or Mojang.",
    "termsOfService": "https://elitebot.dev/apiterms",
    "contact": {
      "name": "- GitHub",
      "url": "https://github.com/EliteFarmers/API"
    },
    "license": {
      "name": "GPL-3.0",
      "url": "https://github.com/EliteFarmers/API/blob/master/LICENSE.txt"
    },
    "version": "1.0"
  },
  "paths": {
    "/account": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get logged in Minecraft account",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedAccountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedAccountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedAccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/account/search": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Search for Minecraft IGNs",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Query string",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Start of results for pagination",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/account/{discordId}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Minecraft account by Discord ID",
        "parameters": [
          {
            "name": "discordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "minLength": 17,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MinecraftAccountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinecraftAccountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinecraftAccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/account/{playerUuidOrIgn}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get Minecraft account by IGN or UUID",
        "parameters": [
          {
            "name": "playerUuidOrIgn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MinecraftAccountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinecraftAccountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MinecraftAccountDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Link a Minecraft account to a Discord account",
        "parameters": [
          {
            "name": "playerUuidOrIgn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Unlink a Minecraft account from a Discord account",
        "parameters": [
          {
            "name": "playerUuidOrIgn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/account/primary/{playerUuidOrIgn}": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Mark a Minecraft account as primary",
        "parameters": [
          {
            "name": "playerUuidOrIgn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/admin/admins": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get admin list",
        "responses": {
          "200": {
            "description": "List of admins",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountWithPermsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountWithPermsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountWithPermsDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/admin/permissions/{memberId}/{permission}": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add member permissions",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "permission",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Remove member permissions",
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "permission",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get list of roles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/admin/user/{userId}/roles/{role}": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a role to a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Member id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "Role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Remove a role from a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Member id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "Role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/admin/upcomingcontests": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete cached upcoming contests",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/events/weight": {
      "post": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Create a Farming Weight Event",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWeightEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/events/medals": {
      "post": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Create a Medal Collection Event",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMedalEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/events/{eventId}": {
      "patch": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Edit an Event",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Delete an Event",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/events/{eventId}/bans": {
      "get": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Get banned members from an event",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberBannedDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberBannedDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberBannedDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/events/{eventId}/bans/{playerUuid}": {
      "post": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Ban a member from an event",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberBannedDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberBannedDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberBannedDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Unban a member from an event",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/events/{eventId}/teams": {
      "get": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Get all teams in an event",
        "description": "This is a protected route in order to include join codes for the teams",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventTeamWithMembersDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventTeamWithMembersDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventTeamWithMembersDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Create a team for an event",
        "description": "This generally should only be used for events with a set amount of teams (users are not allowed to create their own teams)",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventTeamDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventTeamDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventTeamDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/events/{eventId}/teams/{teamId}": {
      "delete": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Delete a team from an event",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/events/{eventId}/teams/{teamId}/members/{playerUuidOrIgn}": {
      "delete": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Remove a member from a team",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "playerUuidOrIgn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "AdminEvent"
        ],
        "summary": "Add a member to a team",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "playerUuidOrIgn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get logged in account",
        "description": "Used to get session information from the token",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSessionDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login with Discord credentials",
        "description": "Used for [the website](https://elitebot.dev/) to login users with Discord",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscordLoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscordLoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscordLoginDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh users tokens",
        "description": "Used for [the website](https://elitebot.dev/) to refresh user logins",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRefreshDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRefreshDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRefreshDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/badges": {
      "get": {
        "tags": [
          "Badge"
        ],
        "summary": "Get all badges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadgeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/badge/user/{playerUuid}/{badgeId}": {
      "post": {
        "tags": [
          "Badge"
        ],
        "summary": "Add a badge to a user",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Player UUID (no hyphens)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "badgeId",
            "in": "path",
            "description": "Badge ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Badge"
        ],
        "summary": "Remove a badge from a user",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Player UUID (no hyphens)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "badgeId",
            "in": "path",
            "description": "Badge ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/badge": {
      "post": {
        "tags": [
          "Badge"
        ],
        "summary": "Create a new badge",
        "requestBody": {
          "description": "Badge information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBadgeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBadgeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBadgeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/badge/{badgeId}": {
      "patch": {
        "tags": [
          "Badge"
        ],
        "summary": "Edit a badge",
        "parameters": [
          {
            "name": "badgeId",
            "in": "path",
            "description": "Badge ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "New values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBadgeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBadgeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditBadgeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Badge"
        ],
        "summary": "Delete a badge",
        "parameters": [
          {
            "name": "badgeId",
            "in": "path",
            "description": "Badge ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/{guildId}": {
      "get": {
        "tags": [
          "Bot"
        ],
        "summary": "Get a guild by ID",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "Discord server (guild) ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateGuildDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateGuildDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateGuildDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/{guildId}/jacob": {
      "get": {
        "tags": [
          "Bot"
        ],
        "summary": "Get Jacob Leaderboard feature for a guild",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Bot"
        ],
        "summary": "Update Jacob Leaderboard feature for a guild",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/contestpings": {
      "get": {
        "tags": [
          "Bot"
        ],
        "summary": "Get list of guilds with Contest Pings enabled",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestPingsFeatureDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestPingsFeatureDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestPingsFeatureDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/contestpings/{guildId}": {
      "delete": {
        "tags": [
          "Bot"
        ],
        "summary": "Delete Contest Pings feature for a guild",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/account": {
      "patch": {
        "tags": [
          "Bot"
        ],
        "summary": "Update user's Discord account",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedAccountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedAccountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedAccountDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/guild/{guildId}": {
      "post": {
        "tags": [
          "Bot"
        ],
        "summary": "Request Discord Guild Update",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Bot"
        ],
        "summary": "Update Discord Guild",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingGuildDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingGuildDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingGuildDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/guild/{guildId}/channels": {
      "post": {
        "tags": [
          "Bot"
        ],
        "summary": "Update Discord Guild",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingGuildChannelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingGuildChannelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingGuildChannelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/guild/{guildId}/roles": {
      "post": {
        "tags": [
          "Bot"
        ],
        "summary": "Update Discord Guild",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingGuildRoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingGuildRoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingGuildRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/guild/{guildId}/members/{userId}/roles": {
      "put": {
        "tags": [
          "Bot"
        ],
        "summary": "Update Guild Memeber Roles",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/badges/{playerUuid}/{badgeId}": {
      "post": {
        "tags": [
          "Bot"
        ],
        "summary": "Add a badge to a player",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "badgeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Bot"
        ],
        "summary": "Remove a badge from a player",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "badgeId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/account/{discordId}/{playerIgnOrUuid}": {
      "post": {
        "tags": [
          "Bot"
        ],
        "summary": "Link a Minecraft account to a Discord account",
        "parameters": [
          {
            "name": "discordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "playerIgnOrUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Bot"
        ],
        "summary": "Unlink a Minecraft account from a Discord account",
        "parameters": [
          {
            "name": "discordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "playerIgnOrUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/bot/account/{discordId}/{playerIgnOrUuid}/primary": {
      "post": {
        "tags": [
          "Bot"
        ],
        "summary": "Set a Minecraft account as primary",
        "parameters": [
          {
            "name": "discordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "playerIgnOrUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/contests/at/{year}": {
      "get": {
        "tags": [
          "Contests"
        ],
        "summary": "Get all contests in a year",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Skyblock Year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "now",
            "in": "query",
            "description": "Use current year",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/YearlyContestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YearlyContestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/YearlyContestsDto"
                }
              }
            }
          }
        }
      }
    },
    "/contests/records/{year}": {
      "get": {
        "tags": [
          "Contests"
        ],
        "summary": "Get contest records for a specific year",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Skyblock Year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/YearlyCropRecordsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YearlyCropRecordsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/YearlyCropRecordsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/contests/at/now": {
      "get": {
        "tags": [
          "Contests"
        ],
        "summary": "Get upcoming contests for the current year",
        "description": "Uses crowd-sourced data, may be inaccurate.\r\nData used and provided by [SkyHanni](https://github.com/hannibal002/SkyHanni/) to display upcoming contests.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/YearlyContestsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YearlyContestsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/YearlyContestsDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contests"
        ],
        "summary": "Upload upcoming contests for the current year",
        "description": "Submit this Skyblock year's contests to the API.\r\nUsed by [SkyHanni](https://github.com/hannibal002/SkyHanni/) to crowd-source upcoming contests.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/contests/at/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "Contests"
        ],
        "summary": "Get all contests in a day",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Skyblock Year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Skyblock Month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Skyblock Day",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JacobContestWithParticipationsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JacobContestWithParticipationsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JacobContestWithParticipationsDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/contests/at/{year}/{month}": {
      "get": {
        "tags": [
          "Contests"
        ],
        "summary": "Get all contests in a month",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Skyblock Year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Skyblock Month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/JacobContestDto"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/JacobContestDto"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/JacobContestDto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/contests/{timestamp}": {
      "get": {
        "tags": [
          "Contests"
        ],
        "summary": "Get the three contests for a specific skyblock day",
        "parameters": [
          {
            "name": "timestamp",
            "in": "path",
            "description": "Unix timestamp in seconds",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JacobContestWithParticipationsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JacobContestWithParticipationsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JacobContestWithParticipationsDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/contest/{contestKey}": {
      "get": {
        "tags": [
          "Contests"
        ],
        "summary": "Get contest from Hypixel contest key",
        "description": "Example key: \"285:2_11:CACTUS\"",
        "parameters": [
          {
            "name": "contestKey",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JacobContestWithParticipationsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JacobContestWithParticipationsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JacobContestWithParticipationsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get all upcoming events",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDetailsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDetailsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/{eventId}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get an event by ID",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/event/{eventId}/members": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get members of an event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberDetailsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventMemberDetailsDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/event/{eventId}/member/{playerUuid}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get a member of an event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventMemberDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMemberDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventMemberDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/event/{eventId}/join": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Join an event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "playerUuid",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profileId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/event/{eventId}/leave": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Leave an event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/event/{eventId}/teams": {
      "get": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Get all teams in an event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventTeamWithMembersDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventTeamWithMembersDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventTeamWithMembersDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Create a team in an event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventTeamDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventTeamDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventTeamDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/event/{eventId}/team/{teamId}": {
      "get": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Get one team in an event",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventTeamWithMembersDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventTeamWithMembersDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventTeamWithMembersDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Edit a team",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventTeamDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventTeamDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventTeamDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Delete a team",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/event/{eventId}/team/{teamId}/code": {
      "post": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Generate new join code for a team",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/event/{eventId}/team/{teamId}/join": {
      "post": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Join a team",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/event/{eventId}/team/{teamId}/leave": {
      "post": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Leave a team",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/event/{eventId}/team/{teamId}/member/{playerUuidOrIgn}": {
      "delete": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Kick a team member",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "playerUuidOrIgn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/event/teams/words": {
      "get": {
        "tags": [
          "EventTeam"
        ],
        "summary": "Get team name words",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EventTeamsWordListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventTeamsWordListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventTeamsWordListDto"
                }
              }
            }
          }
        }
      }
    },
    "/graph/{playerUuid}/{profileUuid}/crops": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Crop Collections Over Time",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "Amount of days after the \"from\" timestamp to include",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Unix timestamp in seconds for the start of the data to return",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "perDay",
            "in": "query",
            "description": "Data points returned per 24 hour period",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of data points",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropCollectionsDataPointDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropCollectionsDataPointDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropCollectionsDataPointDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/graph/{playerUuid}/{profileUuid}/skills": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Skill XP Over Time",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "Amount of days after the \"from\" timestamp to include",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Unix timestamp in seconds for the start of the data to return",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          },
          {
            "name": "perDay",
            "in": "query",
            "description": "Data points returned per 24 hour period",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 4
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of data points",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropCollectionsDataPointDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropCollectionsDataPointDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropCollectionsDataPointDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/graph/admin/{playerUuid}/{profileUuid}/crops": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Admin: Crop Collections Over Time",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropCollectionsDataPointDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropCollectionsDataPointDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CropCollectionsDataPointDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/graph/admin/{playerUuid}/{profileUuid}/skills": {
      "get": {
        "tags": [
          "Graph"
        ],
        "summary": "Admin: Skill XP Over Time",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillsDataPointDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillsDataPointDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SkillsDataPointDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guilds": {
      "get": {
        "tags": [
          "Guild"
        ],
        "summary": "Get list of public guilds",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuildDetailsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuildDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuildDetailsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/guild/{guildId}": {
      "get": {
        "tags": [
          "Guild"
        ],
        "summary": "Get guild by ID",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "Discord server (guild) ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGuildDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGuildDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicGuildDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/guild/{guildId}/events": {
      "get": {
        "tags": [
          "Guild"
        ],
        "summary": "Get guild events",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "Discord server (guild) ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDetailsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventDetailsDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Guild"
        ],
        "summary": "Enable the guild's Event feature",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "Discord server (guild) ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Max amount of Events",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "enable",
            "in": "query",
            "description": "Enable or disable feature",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/jacob": {
      "post": {
        "tags": [
          "Guild"
        ],
        "summary": "Enable the guild's Jacob Leaderboard feature",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "Discord server (guild) ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Max amount of Jacob Leaderboards",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "enable",
            "in": "query",
            "description": "Enable or disable feature",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/guild/{guildId}/public": {
      "post": {
        "tags": [
          "Guild"
        ],
        "summary": "Set the guild's public visibility",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "enable",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/leaderboard/leaderboards": {
      "get": {
        "tags": [
          "Leaderboard"
        ],
        "summary": "Get a list of leaderboards",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigLeaderboardSettings"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigLeaderboardSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigLeaderboardSettings"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/{id}": {
      "get": {
        "tags": [
          "Leaderboard"
        ],
        "summary": "Get a leaderboard by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Any leaderboard ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting offset for returned entries",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum amount of returned entries",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/skill/{skillName}": {
      "get": {
        "tags": [
          "Leaderboard"
        ],
        "summary": "Get a skill leaderboard by name",
        "parameters": [
          {
            "name": "skillName",
            "in": "path",
            "description": "A skill name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting offset for returned entries",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum amount of returned entries",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/collection/{collection}": {
      "get": {
        "tags": [
          "Leaderboard"
        ],
        "summary": "Get a crop collection leaderboard by name",
        "parameters": [
          {
            "name": "collection",
            "in": "path",
            "description": "A crop collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Starting offset for returned entries",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum amount of returned entries",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/ranks/{playerUuid}/{profileUuid}": {
      "get": {
        "tags": [
          "Leaderboard"
        ],
        "summary": "Get a player's leaderboard ranks",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Player Uuid (no hyphens)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "Profile Uuid (no hyphens)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPositionsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPositionsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPositionsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/leaderboard/rank/{leaderboardId}/{playerUuid}/{profileUuid}": {
      "get": {
        "tags": [
          "Leaderboard"
        ],
        "summary": "Get a player's rank in a leaderboard",
        "parameters": [
          {
            "name": "leaderboardId",
            "in": "path",
            "description": "Any leaderboard ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Player Uuid (no hyphens)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "Profile Uuid (no hyphens)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUpcoming",
            "in": "query",
            "description": "Include upcoming players",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "atRank",
            "in": "query",
            "description": "Starting rank for upcoming players",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": -1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPositionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPositionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaderboardPositionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/graph/medals/now": {
      "get": {
        "tags": [
          "MedalGraphs"
        ],
        "summary": "Get current average medal brackets",
        "parameters": [
          {
            "name": "months",
            "in": "query",
            "description": "Amount of previous Skyblock months to include",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContestBracketsDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContestBracketsDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContestBracketsDetailsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/graph/medals/{sbYear}/{sbMonth}": {
      "get": {
        "tags": [
          "MedalGraphs"
        ],
        "summary": "Get medal brackets for a specific month",
        "parameters": [
          {
            "name": "sbYear",
            "in": "path",
            "description": "Skyblock Year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sbMonth",
            "in": "path",
            "description": "Skyblock Month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "months",
            "in": "query",
            "description": "Amount of previous Skyblock months to include",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContestBracketsDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContestBracketsDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContestBracketsDetailsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/graph/medals/{sbYear}": {
      "get": {
        "tags": [
          "MedalGraphs"
        ],
        "summary": "Get medal brackets for multiple years",
        "parameters": [
          {
            "name": "sbYear",
            "in": "path",
            "description": "Starting Skyblock Year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "years",
            "in": "query",
            "description": "Amount of years to include",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "months",
            "in": "query",
            "description": "Amount of previous Skyblock months to include for each year",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestBracketsDetailsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestBracketsDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestBracketsDetailsDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/player/{playerUuidOrIgn}": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "Get player data by UUID or IGN",
        "parameters": [
          {
            "name": "playerUuidOrIgn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerDataDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerDataDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerDataDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/player/{discordId}": {
      "get": {
        "tags": [
          "Player"
        ],
        "summary": "Get linked player data by Discord ID",
        "parameters": [
          {
            "name": "discordId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountsDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/contests/{playerUuid}": {
      "get": {
        "tags": [
          "PlayerContests"
        ],
        "summary": "Get all contests of a player",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Player UUID (no hyphens)",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestParticipationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestParticipationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestParticipationDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/contests/{playerUuid}/{profileUuid}": {
      "get": {
        "tags": [
          "PlayerContests"
        ],
        "summary": "Get all contests for a profile member",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Player UUID (no hyphens)",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "Profile UUID (no hyphens)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestParticipationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestParticipationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestParticipationDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/contests/{playerUuid}/selected": {
      "get": {
        "tags": [
          "PlayerContests"
        ],
        "summary": "Get all contests for a selected profile member",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Player UUID (no hyphens)",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 32,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestParticipationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestParticipationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContestParticipationDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/profile/{uuid}/selected": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Selected Profile Member",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileMemberDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileMemberDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileMemberDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/profile/{playerUuid}/{profileUuid}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Profile Member",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileMemberDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileMemberDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileMemberDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/profile/{profileUuid}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get Profile Details",
        "parameters": [
          {
            "name": "profileUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDetailsDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{playerUuid}": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get List of Profile Details",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileDetailsDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileDetailsDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileDetailsDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{playerUuidOrIgn}/names": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get List of Profile Names",
        "parameters": [
          {
            "name": "playerUuidOrIgn",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileNamesDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileNamesDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileNamesDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/guilds": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the user's guilds",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuildMemberDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuildMemberDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuildMemberDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/user/guild/{guildId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the user's guild",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedGuildDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedGuildDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedGuildDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/user/guild/{guildId}/invite": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Set the guild's Discord invite",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/user/guild/{guildId}/jacob": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update the guild's Jacob Leaderboard feature",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the guild's Jacob Leaderboards",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/user/guild/{guildId}/jacob/leaderboard": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a guild Jacob Leaderboard",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboard"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboard"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/user/guild/{guildId}/jacob/{lbId}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Replace a guild Jacob Leaderboard",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "lbId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboard"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboard"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GuildJacobLeaderboard"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update a guild Jacob Leaderboard",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "lbId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGuildJacobLeaderboardDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGuildJacobLeaderboardDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGuildJacobLeaderboardDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a guild Jacob Leaderboard",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "lbId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/user/guild/{guildId}/jacob/{lbId}/send": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send a guild Jacob Leaderboard to Discord",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "lbId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/user/guild/{guildId}/contestpings": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update the guild's contest ping feature",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContestPingsFeatureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContestPingsFeatureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContestPingsFeatureDto"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Remove the guild's contest ping feature",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/user/guild/{guildId}/adminrole": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Set a guild's admin role",
        "parameters": [
          {
            "name": "guildId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Discord role ID",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/user/badges/{playerUuid}": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update a user's badge settings",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EditUserBadgeDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EditUserBadgeDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EditUserBadgeDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/weight/{playerUuid}": {
      "get": {
        "tags": [
          "Weight"
        ],
        "summary": "Get farming weight for all profiles of a player",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "Player UUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FarmingWeightAllProfilesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FarmingWeightAllProfilesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FarmingWeightAllProfilesDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/weight/{playerUuid}/selected": {
      "get": {
        "tags": [
          "Weight"
        ],
        "summary": "Get farming weight for the selected profile of a player",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FarmingWeightDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FarmingWeightDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FarmingWeightDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/weight/{playerUuid}/{profileUuid}": {
      "get": {
        "tags": [
          "Weight"
        ],
        "summary": "Get farming weight for a specific profile of a player",
        "parameters": [
          {
            "name": "playerUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "profileUuid",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FarmingWeightDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FarmingWeightDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FarmingWeightDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/weights": {
      "get": {
        "tags": [
          "Weight"
        ],
        "summary": "Get crop weight constants",
        "description": "Use /weights/all instead",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/weights/all": {
      "get": {
        "tags": [
          "Weight"
        ],
        "summary": "Get all farming weight constants",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WeightsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeightsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeightsDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountWithPermsDto": {
        "required": [
          "displayName",
          "id",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiAccessDto": {
        "type": "object",
        "properties": {
          "inventories": {
            "type": "boolean"
          },
          "collections": {
            "type": "boolean"
          },
          "skills": {
            "type": "boolean"
          },
          "vault": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AuthRefreshDto": {
        "required": [
          "access_token",
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "minLength": 1,
            "type": "string",
            "description": "User ID"
          },
          "refresh_token": {
            "minLength": 1,
            "type": "string",
            "description": "Refresh token for the user"
          }
        },
        "additionalProperties": false
      },
      "AuthResponseDto": {
        "required": [
          "access_token",
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "minLength": 1,
            "type": "string",
            "description": "Access token for the user"
          },
          "expires_in": {
            "type": "string",
            "description": "Expiry date of the access token in Unix timestamp seconds",
            "nullable": true
          },
          "refresh_token": {
            "minLength": 1,
            "type": "string",
            "description": "Refresh token for the user"
          }
        },
        "additionalProperties": false
      },
      "AuthSessionDto": {
        "required": [
          "avatar",
          "id",
          "ign",
          "roles",
          "username",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "Discord user ID"
          },
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Discord username"
          },
          "avatar": {
            "minLength": 1,
            "type": "string",
            "description": "Discord avatar hash"
          },
          "ign": {
            "minLength": 1,
            "type": "string",
            "description": "Primary Minecraft IGN"
          },
          "uuid": {
            "minLength": 1,
            "type": "string",
            "description": "Primary Minecraft UUID"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of user roles"
          }
        },
        "additionalProperties": false
      },
      "AuthorizedAccountDto": {
        "required": [
          "DisplayName",
          "Id",
          "Inventory",
          "MinecraftAccounts",
          "Redemptions",
          "Settings",
          "Username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "permissions": {
            "type": "integer",
            "format": "int32"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "redemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RedemptionDto"
            }
          },
          "inventory": {
            "$ref": "#/components/schemas/EliteInventoryDto"
          },
          "settings": {
            "$ref": "#/components/schemas/EliteSettingsDto"
          },
          "minecraftAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinecraftAccountDetailsDto"
            }
          }
        },
        "additionalProperties": false
      },
      "AuthorizedGuildDto": {
        "required": [
          "id",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "permissions": {
            "minLength": 1,
            "type": "string"
          },
          "guild": {
            "$ref": "#/components/schemas/PrivateGuildDto"
          },
          "member": {
            "$ref": "#/components/schemas/GuildMemberDto"
          }
        },
        "additionalProperties": false
      },
      "AutoRoles": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "requiredWeight": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BadgeDto": {
        "required": [
          "description",
          "imageId",
          "name",
          "requirements"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "imageId": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "requirements": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ChocolateFactoryDto": {
        "type": "object",
        "properties": {
          "chocolate": {
            "type": "integer",
            "format": "int64"
          },
          "totalChocolate": {
            "type": "integer",
            "format": "int64"
          },
          "chocolateSincePrestige": {
            "type": "integer",
            "format": "int64"
          },
          "chocolateSpent": {
            "type": "integer",
            "format": "int64"
          },
          "prestige": {
            "type": "integer",
            "format": "int32"
          },
          "lastViewed": {
            "type": "integer",
            "format": "int64"
          },
          "uniqueRabbits": {
            "$ref": "#/components/schemas/ChocolateFactoryRabbitsDto"
          },
          "totalRabbits": {
            "$ref": "#/components/schemas/ChocolateFactoryRabbitsDto"
          },
          "unlockedZorro": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ChocolateFactoryRabbitsDto": {
        "type": "object",
        "properties": {
          "common": {
            "type": "integer",
            "format": "int32"
          },
          "uncommon": {
            "type": "integer",
            "format": "int32"
          },
          "rare": {
            "type": "integer",
            "format": "int32"
          },
          "epic": {
            "type": "integer",
            "format": "int32"
          },
          "legendary": {
            "type": "integer",
            "format": "int32"
          },
          "mythic": {
            "type": "integer",
            "format": "int32"
          },
          "divine": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConfigLeaderboardSettings": {
        "type": "object",
        "properties": {
          "completeRefreshInterval": {
            "type": "integer",
            "format": "int32"
          },
          "leaderboards": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Leaderboard"
            }
          },
          "collectionLeaderboards": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Leaderboard"
            }
          },
          "skillLeaderboards": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Leaderboard"
            }
          },
          "pestLeaderboards": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Leaderboard"
            }
          }
        },
        "additionalProperties": false
      },
      "ContestBracketsDetailsDto": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "brackets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ContestBracketsDto"
            }
          }
        },
        "additionalProperties": false
      },
      "ContestBracketsDto": {
        "type": "object",
        "properties": {
          "bronze": {
            "type": "integer",
            "format": "int32"
          },
          "silver": {
            "type": "integer",
            "format": "int32"
          },
          "gold": {
            "type": "integer",
            "format": "int32"
          },
          "platinum": {
            "type": "integer",
            "format": "int32"
          },
          "diamond": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContestMedal": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "ContestParticipationDto": {
        "type": "object",
        "properties": {
          "crop": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "collected": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "participants": {
            "type": "integer",
            "format": "int32"
          },
          "medal": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContestParticipationWithTimestampDto": {
        "type": "object",
        "properties": {
          "playerUuid": {
            "type": "string"
          },
          "playerName": {
            "type": "string"
          },
          "profileUuid": {
            "type": "string"
          },
          "removed": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "collected": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "participants": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ContestPingsFeature": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "channelId": {
            "type": "string",
            "nullable": true
          },
          "alwaysPingRole": {
            "type": "string",
            "nullable": true
          },
          "cropPingRoles": {
            "$ref": "#/components/schemas/StringCropSettings"
          },
          "delaySeconds": {
            "type": "integer",
            "format": "int32"
          },
          "disabledReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContestPingsFeatureDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "guildId": {
            "type": "string",
            "nullable": true
          },
          "channelId": {
            "type": "string",
            "nullable": true
          },
          "alwaysPingRole": {
            "type": "string",
            "nullable": true
          },
          "cropPingRoles": {
            "$ref": "#/components/schemas/StringCropSettings"
          },
          "delaySeconds": {
            "type": "integer",
            "format": "int32"
          },
          "disabledReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBadgeDto": {
        "required": [
          "description",
          "imageId",
          "name",
          "requirements"
        ],
        "type": "object",
        "properties": {
          "imageId": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "requirements": {
            "minLength": 1,
            "type": "string"
          },
          "tieToAccount": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateEventTeamDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxItems": 3,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of strings for the team name, example: [ \"Bountiful\", \"Farmers\" ]",
            "nullable": true
          },
          "color": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMedalEventDto": {
        "required": [
          "endTime",
          "guildId",
          "name",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "The name of the event"
          },
          "type": {
            "$ref": "#/components/schemas/EventType"
          },
          "guildId": {
            "minLength": 1,
            "type": "string",
            "description": "The Discord server id as a string for the event"
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "An optional description for the event",
            "nullable": true
          },
          "rules": {
            "maxLength": 1024,
            "type": "string",
            "description": "An optional set of rules for the event",
            "nullable": true
          },
          "prizeInfo": {
            "maxLength": 1024,
            "type": "string",
            "description": "An optional description of prizes for the event",
            "nullable": true
          },
          "banner": {
            "maxLength": 256,
            "type": "string",
            "description": "An image URL for the event banner",
            "nullable": true
          },
          "thumbnail": {
            "maxLength": 256,
            "type": "string",
            "description": "An image URL for the event thumbnail",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "description": "Unix timestamp for the start time of the event in seconds",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "description": "Unix timestamp for the end time of the event in seconds",
            "format": "int64"
          },
          "joinTime": {
            "type": "integer",
            "description": "Unix timestamp for the latest time a new member can join the event in seconds",
            "format": "int64",
            "nullable": true
          },
          "dynamicStartTime": {
            "type": "boolean",
            "description": "Currently unused",
            "nullable": true
          },
          "requiredRole": {
            "maxLength": 24,
            "type": "string",
            "description": "A Discord role id that is required to participate in the event",
            "nullable": true
          },
          "blockedRole": {
            "maxLength": 24,
            "type": "string",
            "description": "A Discord role id that is blocked from participating in the event",
            "nullable": true
          },
          "maxTeams": {
            "type": "integer",
            "description": "Max amount of teams allowed in the event, 0 if solo event, -1 if unlimited",
            "format": "int32"
          },
          "maxTeamMembers": {
            "type": "integer",
            "description": "Max amount of members allowed in a team, 0 if solo event, -1 if unlimited",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/MedalEventData"
          }
        },
        "additionalProperties": false
      },
      "CreateWeightEventDto": {
        "required": [
          "endTime",
          "guildId",
          "name",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "The name of the event"
          },
          "type": {
            "$ref": "#/components/schemas/EventType"
          },
          "guildId": {
            "minLength": 1,
            "type": "string",
            "description": "The Discord server id as a string for the event"
          },
          "description": {
            "maxLength": 1024,
            "type": "string",
            "description": "An optional description for the event",
            "nullable": true
          },
          "rules": {
            "maxLength": 1024,
            "type": "string",
            "description": "An optional set of rules for the event",
            "nullable": true
          },
          "prizeInfo": {
            "maxLength": 1024,
            "type": "string",
            "description": "An optional description of prizes for the event",
            "nullable": true
          },
          "banner": {
            "maxLength": 256,
            "type": "string",
            "description": "An image URL for the event banner",
            "nullable": true
          },
          "thumbnail": {
            "maxLength": 256,
            "type": "string",
            "description": "An image URL for the event thumbnail",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "description": "Unix timestamp for the start time of the event in seconds",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "description": "Unix timestamp for the end time of the event in seconds",
            "format": "int64"
          },
          "joinTime": {
            "type": "integer",
            "description": "Unix timestamp for the latest time a new member can join the event in seconds",
            "format": "int64",
            "nullable": true
          },
          "dynamicStartTime": {
            "type": "boolean",
            "description": "Currently unused",
            "nullable": true
          },
          "requiredRole": {
            "maxLength": 24,
            "type": "string",
            "description": "A Discord role id that is required to participate in the event",
            "nullable": true
          },
          "blockedRole": {
            "maxLength": 24,
            "type": "string",
            "description": "A Discord role id that is blocked from participating in the event",
            "nullable": true
          },
          "maxTeams": {
            "type": "integer",
            "description": "Max amount of teams allowed in the event, 0 if solo event, -1 if unlimited",
            "format": "int32"
          },
          "maxTeamMembers": {
            "type": "integer",
            "description": "Max amount of members allowed in a team, 0 if solo event, -1 if unlimited",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/WeightEventData"
          }
        },
        "additionalProperties": false
      },
      "CropCollectionsDataPointDto": {
        "required": [
          "crops"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "crops": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "additionalProperties": false
      },
      "CropRecords": {
        "type": "object",
        "properties": {
          "cactus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          },
          "carrot": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          },
          "potato": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          },
          "wheat": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          },
          "melon": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          },
          "pumpkin": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          },
          "mushroom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          },
          "cocoaBeans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          },
          "sugarCane": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          },
          "netherWart": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboardEntry"
            }
          }
        },
        "additionalProperties": false
      },
      "DiscordLoginDto": {
        "required": [
          "access_token",
          "expires_in",
          "refresh_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "minLength": 1,
            "type": "string",
            "description": "Discord access token from OAuth2"
          },
          "expires_in": {
            "minLength": 1,
            "type": "string",
            "description": "Unix timestamp in seconds"
          },
          "refresh_token": {
            "minLength": 1,
            "type": "string",
            "description": "Discord refresh token from OAuth2"
          }
        },
        "additionalProperties": false
      },
      "DiscordRole": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "permissions": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "EarnedMedalInventoryDto": {
        "type": "object",
        "properties": {
          "bronze": {
            "type": "integer",
            "format": "int32"
          },
          "silver": {
            "type": "integer",
            "format": "int32"
          },
          "gold": {
            "type": "integer",
            "format": "int32"
          },
          "platinum": {
            "type": "integer",
            "format": "int32"
          },
          "diamond": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EditBadgeDto": {
        "type": "object",
        "properties": {
          "imageId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "requirements": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditEventDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "rules": {
            "type": "string",
            "nullable": true
          },
          "prizeInfo": {
            "type": "string",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "joinTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "endTime": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dynamicStartTime": {
            "type": "boolean",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "requiredRole": {
            "type": "string",
            "nullable": true
          },
          "blockedRole": {
            "type": "string",
            "nullable": true
          },
          "guildId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditUserBadgeDto": {
        "type": "object",
        "properties": {
          "badgeId": {
            "type": "integer",
            "format": "int32"
          },
          "visible": {
            "type": "boolean",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EliteInventoryDto": {
        "required": [
          "EventTokens",
          "EventTokensSpent",
          "LeaderboardTokens",
          "LeaderboardTokensSpent",
          "SpentMedals",
          "TotalEarnedMedals",
          "UnlockedCosmetics"
        ],
        "type": "object",
        "properties": {
          "totalEarnedMedals": {
            "$ref": "#/components/schemas/MedalInventoryDto"
          },
          "spentMedals": {
            "$ref": "#/components/schemas/MedalInventoryDto"
          },
          "eventTokens": {
            "type": "integer",
            "format": "int32"
          },
          "eventTokensSpent": {
            "type": "integer",
            "format": "int32"
          },
          "leaderboardTokens": {
            "type": "integer",
            "format": "int32"
          },
          "leaderboardTokensSpent": {
            "type": "integer",
            "format": "int32"
          },
          "unlockedCosmetics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "EliteSettingsDto": {
        "type": "object",
        "properties": {
          "defaultPlayerUuid": {
            "type": "string"
          },
          "hideDiscordTag": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EventCreatedDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EventDetailsDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "Event id as a string"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the event"
          },
          "type": {
            "$ref": "#/components/schemas/EventType"
          },
          "mode": {
            "type": "string",
            "description": "Team mode of the event",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Event description",
            "nullable": true
          },
          "rules": {
            "type": "string",
            "description": "Event rules",
            "nullable": true
          },
          "prizeInfo": {
            "type": "string",
            "description": "Event prize information",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "Image URL for the event banner",
            "nullable": true
          },
          "thumbnail": {
            "type": "string",
            "description": "Image URL for the event thumbnail",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "description": "Start time of the event as a string in Unix seconds",
            "nullable": true
          },
          "joinUntilTime": {
            "type": "string",
            "description": "Join time of the event as a string in Unix seconds",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "description": "End time of the event as a string in Unix seconds",
            "nullable": true
          },
          "dynamicStartTime": {
            "type": "boolean",
            "description": "Currently unused"
          },
          "active": {
            "type": "boolean",
            "description": "Event status"
          },
          "maxTeams": {
            "type": "integer",
            "description": "Max amount of teams allowed in the event, 0 if solo event, -1 if unlimited",
            "format": "int32"
          },
          "maxTeamMembers": {
            "type": "integer",
            "description": "Max amount of members allowed in a team, 0 if solo event, -1 if unlimited",
            "format": "int32"
          },
          "requiredRole": {
            "type": "string",
            "description": "Discord role id required to participate in the event",
            "nullable": true
          },
          "blockedRole": {
            "type": "string",
            "description": "Discord role id blocked from participating in the event",
            "nullable": true
          },
          "guildId": {
            "type": "string",
            "description": "Discord server id as a string",
            "nullable": true
          },
          "data": {
            "description": "Data specific to the event",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventMemberBannedDto": {
        "type": "object",
        "properties": {
          "playerUuid": {
            "type": "string",
            "nullable": true
          },
          "playerName": {
            "type": "string",
            "nullable": true
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventMemberDetailsDto": {
        "required": [
          "eventId"
        ],
        "type": "object",
        "properties": {
          "playerUuid": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "nullable": true
          },
          "playerName": {
            "type": "string",
            "nullable": true
          },
          "eventId": {
            "minLength": 1,
            "type": "string"
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/EventMemberStatus"
          },
          "score": {
            "type": "string",
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventMemberDto": {
        "required": [
          "eventId"
        ],
        "type": "object",
        "properties": {
          "playerUuid": {
            "type": "string",
            "nullable": true
          },
          "playerName": {
            "type": "string",
            "nullable": true
          },
          "profileId": {
            "type": "string",
            "nullable": true
          },
          "eventId": {
            "minLength": 1,
            "type": "string"
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/EventMemberStatus"
          },
          "score": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "nullable": true
          },
          "disqualified": {
            "type": "boolean"
          },
          "notes": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventMemberStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "EventTeamWithMembersDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "eventId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventMemberDto"
            }
          },
          "joinCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventTeamsWordListDto": {
        "type": "object",
        "properties": {
          "first": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "second": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "third": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "EventType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExcludedTimespan": {
        "type": "object",
        "properties": {
          "start": {
            "type": "integer",
            "format": "int64"
          },
          "end": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FarmingInventoryDto": {
        "type": "object",
        "properties": {
          "armor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemDto"
            }
          },
          "tools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemDto"
            }
          },
          "equipment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemDto"
            }
          },
          "accessories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemDto"
            }
          }
        },
        "additionalProperties": false
      },
      "FarmingWeightAllProfilesDto": {
        "type": "object",
        "properties": {
          "selectedProfileId": {
            "type": "string",
            "nullable": true
          },
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FarmingWeightWithProfileDto"
            }
          }
        },
        "additionalProperties": false
      },
      "FarmingWeightDto": {
        "type": "object",
        "properties": {
          "totalWeight": {
            "type": "number",
            "format": "double"
          },
          "cropWeight": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "bonusWeight": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "uncountedCrops": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "pests": {
            "$ref": "#/components/schemas/PestsDto"
          },
          "inventory": {
            "$ref": "#/components/schemas/FarmingInventoryDto"
          }
        },
        "additionalProperties": false
      },
      "FarmingWeightWithProfileDto": {
        "required": [
          "profileId",
          "profileName"
        ],
        "type": "object",
        "properties": {
          "profileId": {
            "minLength": 1,
            "type": "string"
          },
          "profileName": {
            "minLength": 1,
            "type": "string"
          },
          "totalWeight": {
            "type": "number",
            "format": "double"
          },
          "cropWeight": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "bonusWeight": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "uncountedCrops": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "pests": {
            "$ref": "#/components/schemas/PestsDto"
          }
        },
        "additionalProperties": false
      },
      "GuildChannelDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GuildDetailsDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "inviteCode": {
            "type": "string",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GuildEventSettings": {
        "type": "object",
        "properties": {
          "maxMonthlyEvents": {
            "type": "integer",
            "format": "int32"
          },
          "publicEventsEnabled": {
            "type": "boolean"
          },
          "createdEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventCreatedDto"
            }
          }
        },
        "additionalProperties": false
      },
      "GuildFeatures": {
        "type": "object",
        "properties": {
          "jacobLeaderboardEnabled": {
            "type": "boolean"
          },
          "jacobLeaderboard": {
            "$ref": "#/components/schemas/GuildJacobLeaderboardFeature"
          },
          "verifiedRoleEnabled": {
            "type": "boolean"
          },
          "verifiedRole": {
            "$ref": "#/components/schemas/VerifiedRoleFeature"
          },
          "eventsEnabled": {
            "type": "boolean"
          },
          "eventSettings": {
            "$ref": "#/components/schemas/GuildEventSettings"
          },
          "contestPingsEnabled": {
            "type": "boolean"
          },
          "contestPings": {
            "$ref": "#/components/schemas/ContestPingsFeature"
          }
        },
        "additionalProperties": false
      },
      "GuildJacobLeaderboard": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "channelId": {
            "type": "string",
            "nullable": true
          },
          "startCutoff": {
            "type": "integer",
            "format": "int64"
          },
          "endCutoff": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "requiredRole": {
            "type": "string",
            "nullable": true
          },
          "blockedRole": {
            "type": "string",
            "nullable": true
          },
          "updateChannelId": {
            "type": "string",
            "nullable": true
          },
          "updateRoleId": {
            "type": "string",
            "nullable": true
          },
          "pingForSmallImprovements": {
            "type": "boolean"
          },
          "crops": {
            "$ref": "#/components/schemas/CropRecords"
          }
        },
        "additionalProperties": false
      },
      "GuildJacobLeaderboardEntry": {
        "required": [
          "discordId",
          "ign",
          "record",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "minLength": 1,
            "type": "string"
          },
          "ign": {
            "minLength": 1,
            "type": "string"
          },
          "discordId": {
            "minLength": 1,
            "type": "string"
          },
          "record": {
            "$ref": "#/components/schemas/ContestParticipationDto"
          }
        },
        "additionalProperties": false
      },
      "GuildJacobLeaderboardFeature": {
        "type": "object",
        "properties": {
          "maxLeaderboards": {
            "type": "integer",
            "format": "int32"
          },
          "blockedRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscordRole"
            }
          },
          "blockedUsers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "requiredRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscordRole"
            }
          },
          "excludedParticipations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excludedTimespans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExcludedTimespan"
            }
          },
          "leaderboards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildJacobLeaderboard"
            }
          }
        },
        "additionalProperties": false
      },
      "GuildMemberDto": {
        "required": [
          "id",
          "name",
          "permissions"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "hasBot": {
            "type": "boolean"
          },
          "permissions": {
            "minLength": 1,
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "GuildRoleDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IncomingAccountDto": {
        "required": [
          "id",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncomingGuildChannelDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "permissions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncomingGuildDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "string",
            "nullable": true
          },
          "botPermissions": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncomingGuildChannelDto"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncomingGuildRoleDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncomingGuildRoleDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "skyblockId": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lore": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "enchantments": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "gems": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JacobContestDto": {
        "required": [
          "crop"
        ],
        "type": "object",
        "properties": {
          "crop": {
            "minLength": 1,
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "participants": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JacobContestWithParticipationsDto": {
        "required": [
          "crop"
        ],
        "type": "object",
        "properties": {
          "crop": {
            "minLength": 1,
            "type": "string"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "participants": {
            "type": "integer",
            "format": "int32"
          },
          "brackets": {
            "$ref": "#/components/schemas/ContestBracketsDto"
          },
          "participations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StrippedContestParticipationDto"
            }
          }
        },
        "additionalProperties": false
      },
      "JacobDataDto": {
        "type": "object",
        "properties": {
          "medals": {
            "$ref": "#/components/schemas/MedalInventoryDto"
          },
          "earnedMedals": {
            "$ref": "#/components/schemas/EarnedMedalInventoryDto"
          },
          "perks": {
            "$ref": "#/components/schemas/JacobPerksDto"
          },
          "stats": {
            "$ref": "#/components/schemas/JacobStatsDto"
          },
          "participations": {
            "type": "integer",
            "format": "int32"
          },
          "firstPlaceScores": {
            "type": "integer",
            "format": "int32"
          },
          "contests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContestParticipationDto"
            }
          }
        },
        "additionalProperties": false
      },
      "JacobPerksDto": {
        "type": "object",
        "properties": {
          "doubleDrops": {
            "type": "integer",
            "format": "int32"
          },
          "levelCap": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JacobStatsDto": {
        "type": "object",
        "properties": {
          "brackets": {
            "type": "object",
            "properties": {
              "Cactus": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "Carrot": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "CocoaBeans": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "Melon": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "Mushroom": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "NetherWart": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "Potato": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "Pumpkin": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "SugarCane": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "Wheat": {
                "$ref": "#/components/schemas/ContestMedal"
              },
              "Seeds": {
                "$ref": "#/components/schemas/ContestMedal"
              }
            },
            "additionalProperties": false
          },
          "personalBests": {
            "type": "object",
            "properties": {
              "Cactus": {
                "type": "integer",
                "format": "int64"
              },
              "Carrot": {
                "type": "integer",
                "format": "int64"
              },
              "CocoaBeans": {
                "type": "integer",
                "format": "int64"
              },
              "Melon": {
                "type": "integer",
                "format": "int64"
              },
              "Mushroom": {
                "type": "integer",
                "format": "int64"
              },
              "NetherWart": {
                "type": "integer",
                "format": "int64"
              },
              "Potato": {
                "type": "integer",
                "format": "int64"
              },
              "Pumpkin": {
                "type": "integer",
                "format": "int64"
              },
              "SugarCane": {
                "type": "integer",
                "format": "int64"
              },
              "Wheat": {
                "type": "integer",
                "format": "int64"
              },
              "Seeds": {
                "type": "integer",
                "format": "int64"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "Leaderboard": {
        "required": [
          "id",
          "order",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "order": {
            "minLength": 1,
            "type": "string"
          },
          "scoreFormat": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardDto": {
        "required": [
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "maxEntries": {
            "type": "integer",
            "format": "int32"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaderboardEntryDto"
            }
          }
        },
        "additionalProperties": false
      },
      "LeaderboardEntryDto": {
        "type": "object",
        "properties": {
          "ign": {
            "type": "string",
            "nullable": true
          },
          "profile": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LeaderboardPositionDto": {
        "type": "object",
        "properties": {
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "upcomingRank": {
            "type": "integer",
            "format": "int32"
          },
          "upcomingPlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeaderboardEntryDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LeaderboardPositionsDto": {
        "type": "object",
        "properties": {
          "misc": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "skills": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "collections": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "pests": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "LinkedAccountsDto": {
        "type": "object",
        "properties": {
          "selectedUuid": {
            "type": "string",
            "nullable": true
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerDataDto"
            }
          }
        },
        "additionalProperties": false
      },
      "MedalEventData": {
        "type": "object",
        "properties": {
          "medalWeights": {
            "type": "object",
            "properties": {
              "None": {
                "type": "integer",
                "format": "int32"
              },
              "Bronze": {
                "type": "integer",
                "format": "int32"
              },
              "Silver": {
                "type": "integer",
                "format": "int32"
              },
              "Gold": {
                "type": "integer",
                "format": "int32"
              },
              "Platinum": {
                "type": "integer",
                "format": "int32"
              },
              "Diamond": {
                "type": "integer",
                "format": "int32"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "MedalInventoryDto": {
        "type": "object",
        "properties": {
          "bronze": {
            "type": "integer",
            "format": "int32"
          },
          "silver": {
            "type": "integer",
            "format": "int32"
          },
          "gold": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MemberDetailsDto": {
        "required": [
          "username",
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          },
          "profileName": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "farmingWeight": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "MinecraftAccountDetailsDto": {
        "required": [
          "Id",
          "Name",
          "PrimaryAccount",
          "Properties"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "primaryAccount": {
            "type": "boolean"
          },
          "badges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserBadgeDto"
            }
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinecraftAccountPropertyDto"
            }
          }
        },
        "additionalProperties": false
      },
      "MinecraftAccountDto": {
        "required": [
          "EventEntries",
          "Id",
          "Name",
          "PrimaryAccount",
          "Profiles",
          "Properties"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "primaryAccount": {
            "type": "boolean"
          },
          "discordId": {
            "type": "string",
            "nullable": true
          },
          "discordUsername": {
            "type": "string",
            "nullable": true
          },
          "discordAvatar": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinecraftAccountPropertyDto"
            }
          },
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileDetailsDto"
            }
          },
          "badges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserBadgeDto"
            }
          },
          "playerData": {
            "$ref": "#/components/schemas/PlayerDataDto"
          }
        },
        "additionalProperties": false
      },
      "MinecraftAccountPropertyDto": {
        "required": [
          "Name",
          "Value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PestWeightsDto": {
        "type": "object",
        "properties": {
          "brackets": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "PestsDto": {
        "type": "object",
        "properties": {
          "beetle": {
            "type": "integer",
            "format": "int32"
          },
          "cricket": {
            "type": "integer",
            "format": "int32"
          },
          "fly": {
            "type": "integer",
            "format": "int32"
          },
          "locust": {
            "type": "integer",
            "format": "int32"
          },
          "mite": {
            "type": "integer",
            "format": "int32"
          },
          "mosquito": {
            "type": "integer",
            "format": "int32"
          },
          "moth": {
            "type": "integer",
            "format": "int32"
          },
          "rat": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "type": "integer",
            "format": "int32"
          },
          "earthworm": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PetDto": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "exp": {
            "type": "number",
            "format": "double"
          },
          "active": {
            "type": "boolean"
          },
          "tier": {
            "type": "string",
            "nullable": true
          },
          "heldItem": {
            "type": "string",
            "nullable": true
          },
          "candyUsed": {
            "type": "integer",
            "format": "int32"
          },
          "skin": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlayerDataDto": {
        "required": [
          "uuid"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "minLength": 1,
            "type": "string"
          },
          "displayname": {
            "type": "string",
            "nullable": true
          },
          "firstLogin": {
            "type": "integer",
            "format": "int64"
          },
          "lastLogin": {
            "type": "integer",
            "format": "int64"
          },
          "lastLogout": {
            "type": "integer",
            "format": "int64"
          },
          "karma": {
            "type": "integer",
            "format": "int64"
          },
          "networkExp": {
            "type": "number",
            "format": "double"
          },
          "rewardHighScore": {
            "type": "integer",
            "format": "int32"
          },
          "rewardScore": {
            "type": "integer",
            "format": "int32"
          },
          "rewardStreak": {
            "type": "integer",
            "format": "int32"
          },
          "totalDailyRewards": {
            "type": "integer",
            "format": "int32"
          },
          "totalRewards": {
            "type": "integer",
            "format": "int32"
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "rank": {
            "type": "string",
            "nullable": true
          },
          "newPackageRank": {
            "type": "string",
            "nullable": true
          },
          "rankPlusColor": {
            "type": "string",
            "nullable": true
          },
          "monthlyPackageRank": {
            "type": "string",
            "nullable": true
          },
          "mostRecentMonthlyPackageRank": {
            "type": "string",
            "nullable": true
          },
          "monthlyRankColor": {
            "type": "string",
            "nullable": true
          },
          "socialMedia": {
            "$ref": "#/components/schemas/SocialMediaLinksDto"
          }
        },
        "additionalProperties": false
      },
      "PrivateGuildDto": {
        "required": [
          "botPermissionsNew",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "features": {
            "$ref": "#/components/schemas/GuildFeatures"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "inviteCode": {
            "type": "string",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "adminRole": {
            "type": "string",
            "nullable": true
          },
          "botPermissions": {
            "type": "string",
            "nullable": true
          },
          "botPermissionsNew": {
            "minLength": 1,
            "type": "string"
          },
          "discordFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "memberCount": {
            "type": "integer",
            "format": "int32"
          },
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildChannelDto"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GuildRoleDto"
            }
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProfileDetailsDto": {
        "required": [
          "profileId",
          "profileName"
        ],
        "type": "object",
        "properties": {
          "profileId": {
            "minLength": 1,
            "type": "string"
          },
          "profileName": {
            "minLength": 1,
            "type": "string"
          },
          "gameMode": {
            "type": "string"
          },
          "selected": {
            "type": "boolean"
          },
          "bankBalance": {
            "type": "number",
            "format": "double"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberDetailsDto"
            }
          }
        },
        "additionalProperties": false
      },
      "ProfileEventMemberDto": {
        "required": [
          "eventId",
          "eventName"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "minLength": 1,
            "type": "string"
          },
          "eventName": {
            "minLength": 1,
            "type": "string"
          },
          "teamId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/EventMemberStatus"
          },
          "rank": {
            "type": "integer",
            "description": "Currently not populated",
            "format": "int32"
          },
          "score": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProfileMemberDto": {
        "required": [
          "farmingWeight",
          "jacob",
          "playerUuid",
          "profileId",
          "profileName"
        ],
        "type": "object",
        "properties": {
          "profileId": {
            "minLength": 1,
            "type": "string"
          },
          "playerUuid": {
            "minLength": 1,
            "type": "string"
          },
          "profileName": {
            "minLength": 1,
            "type": "string"
          },
          "api": {
            "$ref": "#/components/schemas/ApiAccessDto"
          },
          "skyblockXp": {
            "type": "integer",
            "format": "int32"
          },
          "purse": {
            "type": "number",
            "format": "double"
          },
          "bankBalance": {
            "type": "number",
            "format": "double"
          },
          "collections": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          },
          "collectionTiers": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "craftedMinions": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "pets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PetDto"
            }
          },
          "unparsed": {
            "$ref": "#/components/schemas/UnparsedApiDataDto"
          },
          "jacob": {
            "$ref": "#/components/schemas/JacobDataDto"
          },
          "farmingWeight": {
            "$ref": "#/components/schemas/FarmingWeightDto"
          },
          "skills": {
            "$ref": "#/components/schemas/SkillsDto"
          },
          "chocolateFactory": {
            "$ref": "#/components/schemas/ChocolateFactoryDto"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileEventMemberDto"
            }
          },
          "isSelected": {
            "type": "boolean"
          },
          "wasRemoved": {
            "type": "boolean"
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ProfileNamesDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "selected": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PublicGuildDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "inviteCode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "format": "int32"
          },
          "features": {
            "$ref": "#/components/schemas/PublicGuildFeaturesDto"
          }
        },
        "additionalProperties": false
      },
      "PublicGuildFeaturesDto": {
        "type": "object",
        "properties": {
          "jacobLeaderboardEnabled": {
            "type": "boolean"
          },
          "jacobLeaderboard": {
            "$ref": "#/components/schemas/PublicJacobLeaderboardFeatureDto"
          },
          "eventsEnabled": {
            "type": "boolean"
          },
          "eventSettings": {
            "$ref": "#/components/schemas/GuildEventSettings"
          },
          "contestPingsEnabled": {
            "type": "boolean"
          },
          "contestPings": {
            "$ref": "#/components/schemas/ContestPingsFeatureDto"
          }
        },
        "additionalProperties": false
      },
      "PublicJacobLeaderboardDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "channelId": {
            "type": "string",
            "nullable": true
          },
          "startCutoff": {
            "type": "integer",
            "format": "int64"
          },
          "endCutoff": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "requiredRole": {
            "type": "string",
            "nullable": true
          },
          "blockedRole": {
            "type": "string",
            "nullable": true
          },
          "updateChannelId": {
            "type": "string",
            "nullable": true
          },
          "updateRoleId": {
            "type": "string",
            "nullable": true
          },
          "pingForSmallImprovements": {
            "type": "boolean"
          },
          "crops": {
            "$ref": "#/components/schemas/CropRecords"
          }
        },
        "additionalProperties": false
      },
      "PublicJacobLeaderboardFeatureDto": {
        "type": "object",
        "properties": {
          "maxLeaderboards": {
            "type": "integer",
            "format": "int32"
          },
          "blockedRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscordRole"
            }
          },
          "requiredRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscordRole"
            }
          },
          "excludedTimespans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExcludedTimespan"
            }
          },
          "leaderboards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicJacobLeaderboardDto"
            }
          }
        },
        "additionalProperties": false
      },
      "RedemptionDto": {
        "required": [
          "cost",
          "itemId"
        ],
        "type": "object",
        "properties": {
          "itemId": {
            "minLength": 1,
            "type": "string"
          },
          "cost": {
            "minLength": 1,
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SkillsDataPointDto": {
        "required": [
          "skills"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "skills": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "additionalProperties": false
      },
      "SkillsDto": {
        "type": "object",
        "properties": {
          "farming": {
            "type": "number",
            "format": "double"
          },
          "mining": {
            "type": "number",
            "format": "double"
          },
          "combat": {
            "type": "number",
            "format": "double"
          },
          "foraging": {
            "type": "number",
            "format": "double"
          },
          "fishing": {
            "type": "number",
            "format": "double"
          },
          "enchanting": {
            "type": "number",
            "format": "double"
          },
          "alchemy": {
            "type": "number",
            "format": "double"
          },
          "carpentry": {
            "type": "number",
            "format": "double"
          },
          "runecrafting": {
            "type": "number",
            "format": "double"
          },
          "taming": {
            "type": "number",
            "format": "double"
          },
          "social": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SocialMediaLinksDto": {
        "type": "object",
        "properties": {
          "discord": {
            "type": "string",
            "nullable": true
          },
          "hypixel": {
            "type": "string",
            "nullable": true
          },
          "youtube": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringCropSettings": {
        "type": "object",
        "properties": {
          "cactus": {
            "type": "string",
            "nullable": true
          },
          "carrot": {
            "type": "string",
            "nullable": true
          },
          "potato": {
            "type": "string",
            "nullable": true
          },
          "wheat": {
            "type": "string",
            "nullable": true
          },
          "melon": {
            "type": "string",
            "nullable": true
          },
          "pumpkin": {
            "type": "string",
            "nullable": true
          },
          "mushroom": {
            "type": "string",
            "nullable": true
          },
          "cocoaBeans": {
            "type": "string",
            "nullable": true
          },
          "sugarCane": {
            "type": "string",
            "nullable": true
          },
          "netherWart": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StrippedContestParticipationDto": {
        "type": "object",
        "properties": {
          "collected": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "medal": {
            "type": "string",
            "nullable": true
          },
          "removed": {
            "type": "boolean"
          },
          "playerUuid": {
            "type": "string"
          },
          "playerName": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TempStatBuffResponse": {
        "type": "object",
        "properties": {
          "stat": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "expire_at": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "UnparsedApiDataDto": {
        "type": "object",
        "properties": {
          "perks": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "nullable": true
          },
          "tempStatBuffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempStatBuffResponse"
            },
            "nullable": true
          },
          "accessoryBagSettings": {
            "nullable": true
          },
          "bestiary": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateEventTeamDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxItems": 3,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of strings for the team name, example: [ \"Bountiful\", \"Farmers\" ]",
            "nullable": true
          },
          "color": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateGuildJacobLeaderboardDto": {
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "nullable": true
          },
          "startCutoff": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "endCutoff": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "title": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "requiredRole": {
            "type": "string",
            "nullable": true
          },
          "blockedRole": {
            "type": "string",
            "nullable": true
          },
          "updateChannelId": {
            "type": "string",
            "nullable": true
          },
          "updateRoleId": {
            "type": "string",
            "nullable": true
          },
          "pingForSmallImprovements": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserBadgeDto": {
        "required": [
          "description",
          "imageId",
          "name",
          "requirements",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "imageId": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "requirements": {
            "minLength": 1,
            "type": "string"
          },
          "timestamp": {
            "minLength": 1,
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VerifiedRoleFeature": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "autoRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutoRoles"
            }
          }
        },
        "additionalProperties": false
      },
      "WeightEventData": {
        "type": "object",
        "properties": {
          "cropWeights": {
            "type": "object",
            "properties": {
              "Cactus": {
                "type": "number",
                "format": "double"
              },
              "Carrot": {
                "type": "number",
                "format": "double"
              },
              "CocoaBeans": {
                "type": "number",
                "format": "double"
              },
              "Melon": {
                "type": "number",
                "format": "double"
              },
              "Mushroom": {
                "type": "number",
                "format": "double"
              },
              "NetherWart": {
                "type": "number",
                "format": "double"
              },
              "Potato": {
                "type": "number",
                "format": "double"
              },
              "Pumpkin": {
                "type": "number",
                "format": "double"
              },
              "SugarCane": {
                "type": "number",
                "format": "double"
              },
              "Wheat": {
                "type": "number",
                "format": "double"
              },
              "Seeds": {
                "type": "number",
                "format": "double"
              }
            },
            "additionalProperties": false,
            "description": "The weights of each crop in the event"
          }
        },
        "additionalProperties": false
      },
      "WeightsDto": {
        "type": "object",
        "properties": {
          "crops": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "pests": {
            "$ref": "#/components/schemas/PestWeightsDto"
          }
        },
        "additionalProperties": false
      },
      "YearlyContestsDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "complete": {
            "type": "boolean"
          },
          "contests": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "YearlyCropRecordsDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "crops": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ContestParticipationWithTimestampDto"
              }
            }
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter Bearer Token",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}